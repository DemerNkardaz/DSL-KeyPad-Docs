const SUPPORTED_LANGUAGES = ['en-US', 'ru-RU'];
const locale = new Intl.DateTimeFormat().resolvedOptions().locale;
const language = SUPPORTED_LANGUAGES.includes(locale) ? locale : 'en-US';
const randomLetters = [
	"«∑√ûÍù®√ò≈Æ√á«¢Íú®·∫ûÍüï∆±·∫≥·µ∂·æÜ·º£œû—¨Íôä‘òÍôê—¶–èÍôûÍöéüúç‚ôÖ‚Ø†‚Ø°‚òøüùª‚òØ‚ò∞‚ò∂·õó·õü·õâ", // Random
	"üúÅüúÉüúÇüúÑüùáüùûüú≤üúÖüúÜüúâüúäüúçüúèüúîüùÅüúøüú∂üùòüùóüùõüú©üú™üúæüú†üúë‚òø‚òâ‚òæ‚ôÅüù™üù©üúØüú•üúπüúòüúõ", // Alchemy
	"‚òâ‚òæ‚òø‚ôÄüú®‚ôÇ‚ôÉ‚ôÑ‚ôÖ‚ôÜ‚Ø†‚Ø°‚Ø¢‚Ø£‚Ø§‚Ø•‚Ø¶‚Øß‚ôá‚Øì‚Øî‚Øï‚Øñ‚ö≥‚Ø≤‚Ø∞‚Ø±üùªüùºüùΩüùæüùø‚Øó‚Øò‚ö∂‚ö∑‚Øô‚Øö‚ö¥‚öµ‚ö∏‚Øù", // Astrology
	"‚ôà‚ôâ‚ôä‚ôã‚ôå‚ôç‚ôé‚ôè‚ôê‚ôë‚ôí‚ôì‚õéÔ∏é‚òä‚òã‚òå‚òç‚öπ‚ö∫‚öª‚öº‚Ñû‚Ø≥‚Ø¥‚Øµ‚Ø∂‚Ø∑‚Ø∏üù¥üùµüù∂", // Zodiacs and second astrology
	"‚òØÔ∏é‚öã‚öä‚öè‚öé‚öç‚öå‚ò∞‚ò±‚ò≤‚ò≥‚ò¥‚òµ‚ò∂‚ò∑‰∑Ä‰∑Å‰∑Ç‰∑É‰∑Ñ‰∑Ö‰∑Ü‰∑á‰∑à‰∑â", // Yijing
	"ü©†ü©°ü©°ü©¢ü©¢ü©£ü©£ü©§ü©§ü©•ü©•ü©¶ü©¶ü©¶ü©¶ü©¶ü©ßü©®ü©®ü©©ü©©ü©™ü©™ü©´ü©´ü©¨ü©¨ü©≠ü©≠ü©≠ü©≠ü©≠", // Xiangqi
	"‚ôö‚ôõ‚ôú‚ôú‚ôù‚ôù‚ôû‚ôû‚ôü‚ôü‚ôü‚ôü‚ôü‚ôü‚ôü‚ôüü©âü©ëü©íü©ì", // Chess
	"¬§‚Ç†‚Ç≥¬¢‚Çµ‚Ç°$‚ÇØ÷èﬂæ‚Ç¨‚Ç£‚Ç≤‚Ç≠‚Çæ‚Ç¶¬£‚Ç∂‚Ç∑‚ÇΩ‚Ç¥‚Ç§‚Ç∫‚Çπ‚Ç©¬•ÂÜÜÂÖÉ‚Ç´‚ÇÆ‚Ç∏‚Ç™‚Ç±‚Çø", // Wallets
	"·ö®·õí·õû·õñ·ö†·ö∑·ö∫·õÅ·õá·õÉ·ö≤·õö·õó·öæ·õú·õü·õà·ö±·õä·õè·ö¶·öπ·õâ·ö™·ö´·ö≥·õ†·ö∏·öª·õÑ·õ°·õ§·õ£·õù·ö©·õ¢·õã·õ•·ö£·õÆ·õØ·õ∞", // Runes
];

const hellenicPairs = {
	'Œ±': 'Alpha',
	'Œ≤': 'Beta',
	'Œ≥': 'Gamma',
	'Œ¥': 'Delta',
	'Œµ': 'Epsilon',
	'Œ∂': 'Zeta',
	'Œ∑': 'Eta',
	'Œ∏': 'Theta',
	'Œπ': 'Iota',
	'Œ∫': 'Kappa',
	'Œª': 'Lambda',
	'Œº': 'Mu',
	'ŒΩ': 'Nu',
	'Œæ': 'Xi',
	'Œø': 'Omicron',
	'œÄ': 'Pi',
	'œÅ': 'Rho',
	'œÉ': 'Sigma',
	'œÑ': 'Tau',
	'œÖ': 'Upsilon',
	'œÜ': 'Phi',
	'œá': 'Chi',
	'œà': 'Psi',
	'œâ': 'Omega'
};

function returnHellenicStatus(string) {
	const match = string.match(/[Œ±-œâ]/i);
	return match ? hellenicPairs[match[0]] : null;
}

const releaseInfoPromise = getLatestReleaseInfo();
let releaseInfoCache = null;

releaseInfoPromise.then(info => {
  releaseInfoCache = info;
});

async function getLatestReleaseInfo() {
  try {
    const jsdelivrResponse = await fetch(
      'https://data.jsdelivr.com/v1/package/gh/DemerNkardaz/DSL-KeyPad'
    );
    
    if (!jsdelivrResponse.ok) {
      throw new Error(`jsDelivr API error: ${jsdelivrResponse.status}`);
    }
    
    const jsdelivrData = await jsdelivrResponse.json();
    const latestVersion = jsdelivrData.versions[0];
    
    if (!latestVersion) {
      throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –≤–µ—Ä—Å–∏–∏');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —á–µ—Ä–µ–∑ GitHub API (60 –∑–∞–ø—Ä–æ—Å–æ–≤/—á–∞—Å)
    let releaseName = `DSL KeyPad ${latestVersion}`;
    try {
      const githubResponse = await fetch(
        'https://api.github.com/repos/DemerNkardaz/DSL-KeyPad/releases/latest'
      );
      
      if (githubResponse.ok) {
        const githubData = await githubResponse.json();
        releaseName = githubData.name || releaseName;
      }
    } catch (error) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–º—è —Ä–µ–ª–∏–∑–∞ —Å GitHub:', error);
    }
    
    return {
      success: true,
      version: latestVersion,
      name: releaseName,
      downloadUrl: `https://github.com/DemerNkardaz/DSL-KeyPad/releases/download/${latestVersion}/DSL-KeyPad-${latestVersion}.zip`
    };
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–ª–∏–∑–µ:', error.message);
    return {
      success: false,
      error: error.message
    };
  }
}

// –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
function DownloadLastRelease() {
  if (!releaseInfoCache) {
    console.error('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–ª–∏–∑–µ –µ—â—ë –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è');
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–ª–∏–∑–µ');
    return false;
  }
  
  if (!releaseInfoCache.success) {
    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ª–∏–∑–µ:', releaseInfoCache.error);
    alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Ä–µ–ª–∏–∑–µ');
    return false;
  }
  
  const link = document.createElement('a');
  link.href = releaseInfoCache.downloadUrl;
  link.download = `DSL-KeyPad-${releaseInfoCache.version}.zip`;
  link.target = '_blank';
  link.rel = 'noopener noreferrer';
  
  link.click();
  
  console.log(`–ù–∞—á–∞—Ç–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ ${releaseInfoCache.version}`);
  return false;
}